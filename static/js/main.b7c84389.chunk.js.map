{"version":3,"sources":["store/actionTypes.js","store/action.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["SET_LOGINDETAILS","SET_USERID","SET_ACCEPTEDUSERS","SET_ALLTASKS","SET_SINGLETASK","START_SAVE","getLoginDetails","body","dispatch","startSaving","axios","post","headers","then","response","loginDetails","data","results","type","actionTypes","getUserId","catch","error","alert","url","getState","user","get","token","userId","user_id","getAcceptedUsers","err","acceptedUsers","getAllTasks","allTasks","getSingleTask","taskId","singleTask","withRouter","connect","state","taskCount","actions","props","useEffect","className","length","title","position","trigger","arrow","onClick","e","preventDefault","history","push","fullState","startedSaving","singleTaskValue","addNewTask","isUpdating","put","deleteTask","delete","useState","setFocusTime","taskDescription","setTaskDescription","date","setDate","time","setTime","assignUser","setAssignUser","timeList","task_msg","task_date","task_time","color","height","width","htmlFor","id","name","placeholder","value","onChange","target","xmlns","fill","viewBox","d","list","minLength","map","index","accpeptedUser","window","confirm","location","timeInSeconds","timeZone","slice","hoursAndMinutes","split","parseInt","assigned_user","is_completed","time_zone","email","password","dateFormat","Date","getFullYear","getMonth","getDate","task","src","icon","pathname","editHandler","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","filter","user_status","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7c84389.chunk.js","sourcesContent":["export const SET_LOGINDETAILS = 'SET_LOGINDETAILS';\r\nexport const SET_USERID = 'SET_USERID';\r\nexport const SET_ACCEPTEDUSERS = 'SET_ACCEPTEDUSERS';\r\nexport const SET_ALLTASKS = 'SET_ALLTASKS';\r\nexport const SET_SINGLETASK = 'SET_SINGLETASK';\r\nexport const START_SAVE = 'START_SAVE';\r\n","import * as actionTypes from './actionTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const setLoginDetails = (loginDetails) => {\r\n    return {\r\n        type: actionTypes.SET_LOGINDETAILS,\r\n        loginDetails: loginDetails\r\n    }\r\n}\r\n\r\n\r\nexport const setUserId = (userId) => {\r\n    return {\r\n        type: actionTypes.SET_USERID,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const setAcceptedUsers = (acceptedUsers) => {\r\n    return {\r\n        type: actionTypes.SET_ACCEPTEDUSERS,\r\n        acceptedUsers: acceptedUsers\r\n    }\r\n}\r\n\r\nexport const setAllTasks = (allTasks) => {\r\n    return {\r\n        type: actionTypes.SET_ALLTASKS,\r\n        allTasks: allTasks\r\n    }\r\n}\r\n\r\nexport const setSingleTaskValue = (singleTask) => {\r\n    return {\r\n        type: actionTypes.SET_SINGLETASK,\r\n        singleTask: singleTask\r\n    }\r\n}\r\n\r\nexport const getLoginDetails = (body) => {\r\n    return (dispatch) => {\r\n        dispatch(startSaving())\r\n        axios.post('https://stage.api.sloovi.com/login', body, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response.data.results)\r\n            dispatch(setLoginDetails(response.data.results))\r\n            dispatch(getUserId(\"https://stage.api.sloovi.com/user?company_id=company_0336d06ff0ec4b3b9306ddc288482663&product=outreach\"))\r\n        }).catch((error) => {\r\n            \r\n            alert(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserId = (url) => {\r\n    return (dispatch, getState) => {\r\n        const user = getState();\r\n            axios.get(url, {\r\n                headers:{\r\n                    'Authorization': 'Bearer ' + user.user.token,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((response) => {\r\n                dispatch(setUserId(response.data.results.user_id));\r\n                dispatch(getAcceptedUsers(\"https://stage.api.sloovi.com/team?company_id=company_0336d06ff0ec4b3b9306ddc288482663&product=outreach\"));\r\n            }).catch(err => {\r\n                alert(err)\r\n            })\r\n        \r\n    }\r\n}\r\n\r\nexport const getAcceptedUsers = (url) => {\r\n    return (dispatch, getState) => {\r\n        const user = getState();\r\n        axios.get(url, {\r\n            headers:{\r\n                'Authorization': 'Bearer ' + user.user.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response.data.results.data)\r\n            dispatch(setAcceptedUsers(response.data.results.data));\r\n            dispatch(getAllTasks(\"https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b?company_id=company_0336d06ff0ec4b3b9306ddc288482663\"))\r\n        }).catch(err => {\r\n            alert(err.response)\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const getAllTasks = (url) => {\r\n    return (dispatch, getState) => {\r\n        \r\n        const user = getState();\r\n        axios.get(url, {\r\n            headers:{\r\n                'Authorization': 'Bearer ' + user.user.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response.data.results)\r\n            dispatch(setAllTasks(response.data.results));\r\n        }).catch(err => {\r\n            alert(err.response)\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const startSaving = () => {\r\n    return {\r\n        type: actionTypes.START_SAVE,\r\n    }\r\n}\r\n\r\n\r\nexport const addNewTask = (body, isUpdating, taskId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(startSaving());\r\n        const user = getState();\r\n        if(!isUpdating){\r\n            axios.post(\"https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b?company_id=company_0336d06ff0ec4b3b9306ddc288482663\", body, {\r\n                headers:{\r\n                    'Authorization': 'Bearer ' + user.user.token,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((response) => {\r\n                // console.log(user.user.token)\r\n                // console.log(response.data.results)\r\n                dispatch(getAllTasks(\"https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b?company_id=company_0336d06ff0ec4b3b9306ddc288482663\"));\r\n            }).catch(err => {\r\n                alert(err.response)\r\n            })\r\n        }else{\r\n            axios.put(`https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b/${taskId}?company_id=company_0336d06ff0ec4b3b9306ddc288482663`, body, {\r\n                headers:{\r\n                    'Authorization': 'Bearer ' + user.user.token,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((response) => {\r\n                // console.log(user.user.token)\r\n                // console.log(response.data)\r\n                dispatch(getAllTasks(\"https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b?company_id=company_0336d06ff0ec4b3b9306ddc288482663\"));\r\n            }).catch(err => {\r\n                alert(err.response)\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const getSingleTask = (taskId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(startSaving())\r\n        const user = getState();\r\n        axios.get(`https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b/${taskId}?company_id=company_0336d06ff0ec4b3b9306ddc288482663`, {\r\n            headers:{\r\n                'Authorization': 'Bearer ' + user.user.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            // console.log(taskId)\r\n            // console.log(response.data.results)\r\n            dispatch(setSingleTaskValue(response.data.results));\r\n        }).catch(err => {\r\n            alert(err.response)\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const deleteTask = (taskId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(startSaving())\r\n        const user = getState();\r\n        axios.delete(`https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b/${taskId}?company_id=company_0336d06ff0ec4b3b9306ddc288482663`, {\r\n            headers:{\r\n                'Authorization': 'Bearer ' + user.user.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            // console.log(taskId)\r\n            // console.log(response)\r\n            dispatch(getAllTasks(\"https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b?company_id=company_0336d06ff0ec4b3b9306ddc288482663\"))\r\n            // dispatch(setSingleTaskValue(response.data.results));\r\n        }).catch(err => {\r\n            alert(err.response)\r\n        })\r\n        \r\n    }\r\n}","\r\nimport React, {useState, useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport * as actions from \"../store/action\";\r\nimport {Tooltip} from \"react-tippy\"\r\n\r\nfunction Header(props) {\r\n\r\n    useEffect(() => {\r\n        if(props.taskCount.user){\r\n            props.getAllTasks(\"https://stage.api.sloovi.com/task/lead_c1de2c7b9ab94cb9abad131b7294cd8b?company_id=company_0336d06ff0ec4b3b9306ddc288482663\");\r\n        }\r\n    }, [props.taskCount.user])\r\n\r\n    const newTaskHandler = (e) => {\r\n        e.preventDefault();\r\n        props.history.push(\"/task\");\r\n    }\r\n    return (\r\n        <div className=\"task__header\">\r\n            <span className=\"small-text\"><span className=\"task__text\">TASKS</span> &nbsp;{props.taskCount.allTasks.length}</span>\r\n            <Tooltip title=\"New Task\" position=\"top\" trigger=\"mouseenter\" arrow=\"true\">\r\n                <button onClick={newTaskHandler} className=\"plus-icon\">+</button>\r\n            </Tooltip>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        taskCount: state\r\n    }\r\n}\r\n\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        getAllTasks: (url) => dispatch(actions.getAllTasks(url))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Header));\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"./Task.css\";\r\nimport {connect} from 'react-redux';\r\nimport { withRouter  } from 'react-router-dom';\r\nimport * as actions from \"../store/action\";\r\nimport Loader from \"react-loader-spinner\"\r\nimport {Tooltip} from \"react-tippy\"\r\n\r\nfunction Task(props) {\r\n    const [focusTime, setFocusTime] = useState(false);\r\n    const [taskDescription, setTaskDescription] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [time, setTime] = useState(\"\");\r\n    const [assignUser, setAssignUser] = useState(\"\");\r\n    const [timeList, setTimeList] = useState([\"12:00am\", \"12:30am\", \"1:00am\", \"1:30am\",\"2:00am\", \"2:30am\",\"3:00am\", \"3:30am\",\"4:00am\", \"4:30am\",\"5:00am\", \"5:30am\",\"6:00am\", \"6:30am\",\"7:00am\", \"7:30am\",\"8:00am\", \"8:30am\",\"9:00am\", \"9:30am\",\"10:00am\", \"10:30am\",\"11:00am\", \"11:30am\",\"12:00pm\", \"12:30pm\", \"1:00pm\", \"1:30pm\",\"2:00pm\", \"2:30pm\",\"3:00pm\", \"3:30pm\",\"4:00pm\", \"4:30pm\",\"5:00pm\", \"5:30pm\",\"6:00pm\", \"6:30pm\",\"7:00pm\", \"7:30pm\",\"8:00pm\", \"8:30pm\",\"9:00pm\", \"9:30pm\",\"10:00pm\", \"10:30pm\",\"11:00pm\", \"11:30pm\"])\r\n    \r\n    \r\n    useEffect(() => {\r\n        if(props.singleTaskValue){\r\n            setTaskDescription(props.singleTask.task_msg);\r\n            setDate(props.singleTask.task_date);\r\n            setTime(timeList[(props.singleTask.task_time/(60*60))*2]);  // logic for converting milliseconds to the actual time from the above list\r\n        }\r\n    }, [props.singleTaskValue])\r\n\r\n    const timeHandler = (e) => {\r\n        e.preventDefault();\r\n        setTime(e.target.value);\r\n        // console.log(e.target.value);\r\n        if(e.target.value === \"\" ){\r\n            setFocusTime(false);\r\n            return;\r\n        }\r\n        setFocusTime(true);\r\n    }\r\n\r\n    const saveTask = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"aaa\", props.fullState, date);\r\n        let timeInSeconds = 0;\r\n        if(time !== \"\"){\r\n            let timeZone = time.slice(-2);\r\n            let initialPart = time.slice(0, time.length-2);\r\n            let hoursAndMinutes = initialPart.split(\":\");\r\n            if(timeZone === \"am\"){\r\n                if(parseInt(hoursAndMinutes[0]) === 12){\r\n                    timeInSeconds = parseInt(hoursAndMinutes[1]*60)\r\n                }else{\r\n                    timeInSeconds = (parseInt(hoursAndMinutes[0])*60*60) + (parseInt(hoursAndMinutes[1])*60)\r\n                }\r\n            }else{\r\n                if(parseInt(hoursAndMinutes[0]) === 12){\r\n                    timeInSeconds = (parseInt(hoursAndMinutes[0])*60*60) + (parseInt(hoursAndMinutes[1])*60)\r\n                }else{\r\n                    timeInSeconds = (parseInt(hoursAndMinutes[0])*60*60) + (parseInt(hoursAndMinutes[1])*60) + (12*60*60)\r\n                }\r\n            }\r\n        }\r\n        // console.log(\"uuu\", timeInSeconds);\r\n        props.addNewTask({\r\n            assigned_user:  props.userId, \r\n            task_date: date,\r\n            task_time: timeInSeconds,\r\n            is_completed: 0,\r\n            time_zone: 35000,\r\n            task_msg: taskDescription\r\n        }, props.singleTaskValue, props.singleTaskValue ? \r\n        props.location.state.taskId : 0) // props.fullState.singleTaskValue is for reusing this component(checking if user is updating the task or adding it new)\r\n        props.history.push(\"/\")\r\n        // console.log(props);\r\n        \r\n    }\r\n\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault();\r\n        props.history.push(\"/\")\r\n    }\r\n\r\n    const deleteHandler = (e) => {\r\n        e.preventDefault();\r\n        const result = window.confirm(\"Pleae confirm\")\r\n        if(result){\r\n            props.deleteTask(props.location.state.taskId)\r\n            props.history.push(\"/\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        props.startedSaving ? <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30}/> : <div className=\"task__body\">\r\n        <form>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-xs-12 col-md-12 mb-3\">\r\n                    <label htmlFor=\"description\" className=\"control-label mb-1\">Task Description</label>\r\n                    <div className=\"input-group\">\r\n\r\n                        <input className=\"form-control description__style\" id=\"description\" name=\"description\" type=\"text\" placeholder=\"Follow up\" value={taskDescription} onChange={(e) => setTaskDescription(e.target.value)}/>\r\n                        <span className=\"custom-style\"><i className=\"fa fa-id-badge\"></i></span>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-xs-12 col-md-6\">\r\n                    {/* <label htmlFor=\"date\" className=\"control-label mb-1\">Date</label>\r\n                    <div className=\"input-group-date\">\r\n                        <span className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                                <input type=\"date\" className=\"form-control\" id=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n                            </span>\r\n                        </span>\r\n                    </div> */}\r\n                    <label htmlFor=\"date\" className=\"control-label mb-1\">Date</label>\r\n                    {/* <i className=\"fa fa-sort custom-style-for-dropdown\" aria-hidden=\"true\"></i> */}\r\n                    <input type=\"date\" className=\"form-control date-input\" id=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n                    \r\n                </div>\r\n                <div className=\"form-group col-xs-12 col-md-6 mb-3\">\r\n                <label htmlFor=\"time\" className=\"control-label mb-1\">Time</label>\r\n                    <div className=\"input-group time__style\">\r\n                        {/* <input className={`form-control ${focusTime ? 'check' : ''}`} id=\"time\" list=\"timeList\" onChange={timeHandler} name=\"time\" type=\"text\" placeholder=\"Time\" value={time}  /> */}\r\n                        <span className=\"custom-style-for-time\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-clock\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\" />\r\n                            <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\" />\r\n                        </svg></span>\r\n                        {/* <input className={`form-control ${focusTime ? 'check' : ''}`} id=\"time\" list=\"timeList\" onChange={timeHandler} name=\"time\" type=\"text\"  */}\r\n                        <input className=\"form-control check\" id=\"time\" list=\"timeList\" onChange={timeHandler} name=\"time\" type=\"text\" \r\n                        placeholder=\"Time\" value={time} minLength=\"2\" />\r\n                        <datalist id=\"timeList\" className=\"hide-datalist-icon\">\r\n                            {timeList.map((time, index) => {\r\n                                return <option key={index} value={time}/>\r\n                            })}\r\n                            \r\n                        </datalist>\r\n                        \r\n                        {/* <i class=\"fa fa-clock-o\"></i> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-xs-12 col-md-12 mb-4\">\r\n                    <label htmlFor=\"assign-user\" className=\"control-label mb-1\">Assign User</label>\r\n                    \r\n                    <select className=\"form-control\" value={assignUser} onChange={(e) => setAssignUser(e.target.value)}>\r\n                        {props.fullState.acceptedUsers.length !== 0 ? props.fullState.acceptedUsers.map((accpeptedUser, index) => {\r\n                            return <option key={index} value={accpeptedUser.user_id}>{accpeptedUser.name}</option>\r\n                        }) : null}\r\n                    </select>\r\n                    <i className=\"fa fa-sort custom-style-for-dropdown\" aria-hidden=\"true\"></i>\r\n                </div>\r\n            </div>\r\n            <div className=\"task-footer\">\r\n                {props.singleTaskValue ? <div className=\"\" onClick={deleteHandler}>\r\n                    <Tooltip title=\"Delete Task\" position=\"top\" trigger=\"mouseenter\" arrow=\"true\">\r\n                        <button className=\"delete__icon\"><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n                    </Tooltip>\r\n                        \r\n                </div> : null}\r\n                <div className=\"task-footer-buttons\">\r\n                    <div>\r\n                        <button type=\"button\" className=\"cancel__button\" onClick={cancelHandler}>Cancel</button>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"button\" className=\"btn btn-success save__button\" onClick={saveTask}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n       fullState: state,\r\n       startedSaving: state.startedSaving,\r\n       singleTaskValue: state.singleTaskValue,\r\n       singleTask: state.singleTask,\r\n       userId: state.userId\r\n    }\r\n}\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{ \r\n        addNewTask: (body, isUpdating, taskId) => dispatch(actions.addNewTask(body, isUpdating, taskId)),\r\n        deleteTask: (taskId) => dispatch(actions.deleteTask(taskId))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Task));\r\n\r\n","/*****************\r\n\r\n// Getting all tasks and rendering it\r\n\r\n*****************/\r\nimport React, {useState, useEffect, useCallback, useMemo} from 'react'\r\nimport \"./Tasks.css\"\r\nimport {connect} from 'react-redux';\r\nimport { withRouter  } from 'react-router-dom';\r\nimport * as actions from \"../store/action\";\r\nimport {Tooltip} from \"react-tippy\"\r\nimport Loader from \"react-loader-spinner\"\r\n\r\nfunction Tasks(props) {\r\n\r\n\r\n    useEffect(() => {\r\n        props.getLoginDetails({         // This will be called to  1) Getting Access Token 2) Getting User ID from access token 3) Assigned USER dropdown Display User DETAILS\r\n                                        // because we dont have a seperate component for login for this given task I am caling it in useEffect\r\n            email: \"good@test3.com\",\r\n            password: \"12345678\"\r\n        });\r\n        \r\n         \r\n    }, [])\r\n\r\n    const editHandler = (e, taskId) => {\r\n        e.preventDefault();\r\n        props.getSingleTask(taskId)\r\n        props.history.push({\r\n            pathname: \"/task\",\r\n            state: {taskId: taskId}\r\n        })\r\n         \r\n    }\r\n\r\n    const dateFormat = (date) => {\r\n        let d = new Date(date);\r\n        let dateString = d.getFullYear() + \"/\" + (\"0\" + (d.getMonth()+1)).slice(-2) + \"/\" + (\"0\" + d.getDate()).slice(-2);\r\n        return dateString\r\n    }\r\n\r\n    return (\r\n        props.startedSaving ? <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30}/> : props.allTasks.map((task, index) => {\r\n            return (\r\n                <div className=\"all-tasks\" key={index}>\r\n                    <div className=\"avatar\">\r\n                        <img src={props.user.icon} className=\"avatar-image\"/>\r\n                    </div>\r\n                    <div className=\"all-tasks__body\">\r\n                        <div className=\"task__description\">\r\n                            <h6 className=\"description__text\">{task.task_msg}</h6>\r\n                            <span className=\"description__date\">{dateFormat(task.task_date)}</span>\r\n                        </div>\r\n                        <div className=\"task__icons\">\r\n                            <Tooltip title=\"Edit this Task\" position=\"top\" trigger=\"mouseenter\" arrow=\"true\">\r\n                                <button onClick={(e) => editHandler(e, task.id)} className=\"task__icons-button edit-icon\" ><i className=\"fa fa-pencil size-pencil-icon\" aria-hidden=\"true\"></i></button>\r\n                            </Tooltip>\r\n                            <button className=\"task__icons-button\"><i className=\"fa fa-bell\" aria-hidden=\"true\"></i></button>\r\n                            <button className=\"task__icons-button\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n        \r\n        \r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        startedSaving: state.startedSaving,\r\n        allTasks: state.allTasks,\r\n        user: state.user,\r\n    }\r\n}\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        getLoginDetails: (body) => dispatch(actions.getLoginDetails(body)),\r\n        getSingleTask: (taskId) => dispatch(actions.getSingleTask(taskId))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Tasks));\r\n","import './App.css';\nimport {Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Task from './components/Task';\nimport Tasks from './components/Tasks';\n\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"SideNav\">\n        \n      </div>\n      <div className=\"Content\">\n        <div className=\"Header\">\n        </div>\n\n        <div className=\"Section\">\n        <div className=\"Tasks\">\n            <div className=\"first-task\">\n            <Switch>\n                \n                <Route path=\"/task\">\n                    <Header />\n                    <Task/>\n                </Route>\n                <Route path=\"/\">\n                    <Header />\n                    <Tasks/>\n                </Route>\n                <Redirect to=\"/\" />\n            </Switch>\n                \n            </div>\n        </div>\n        </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from './actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    user: null,\r\n    userId: \"\",\r\n    acceptedUsers: [],\r\n    allTasks: [],\r\n    singleTask: null,\r\n    singleTaskValue: false,\r\n    startedSaving: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_LOGINDETAILS:\r\n            return {\r\n                \r\n                ...state,\r\n                user: action.loginDetails\r\n            }\r\n        case actionTypes.SET_USERID:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            }\r\n        case actionTypes.SET_ACCEPTEDUSERS:\r\n            // console.log(action.acceptedUsers)\r\n            return {\r\n                ...state,\r\n                acceptedUsers: action.acceptedUsers.filter(user => user.user_status === \"accepted\")\r\n            }\r\n        case actionTypes.SET_ALLTASKS:\r\n            return{\r\n                ...state,\r\n                allTasks: action.allTasks,\r\n                singleTaskValue: false,\r\n                startedSaving: false\r\n            }\r\n        case actionTypes.SET_SINGLETASK:\r\n            return {\r\n                ...state,\r\n                singleTask: action.singleTask,\r\n                singleTaskValue: true,\r\n                startedSaving: false\r\n            }\r\n        case actionTypes.START_SAVE:\r\n            return{\r\n                ...state,\r\n                startedSaving: true\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\"\nimport { HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducer from \"./store/reducer\"\nimport thunk from 'redux-thunk';\nimport \"react-tippy/dist/tippy.css\"\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}